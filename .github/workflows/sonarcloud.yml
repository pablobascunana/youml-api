name: SonarCloud-Coverage
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Find and Replace Django Secret Key
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{DJANGO_SECRET_KEY}"
          replace: ${{ secrets.DJANGO_SECRET_KEY }}
          regex: false
      - name: Find and Replace Django Debug
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{DJANGO_DEBUG}"
          replace: ${{ secrets.DJANGO_DEBUG }}
          regex: false
      - name: Find and Replace Sengrid Sender Email
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{SENDER_EMAIL}"
          replace: ${{ secrets.SENDER_EMAIL }}
          regex: false
      - name: Find and Replace Sengrid API Key
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{SENDGRID_API_KEY}"
          replace: ${{ secrets.SENDGRID_API_KEY }}
          regex: false
      - name: Find and Replace JWT User Validation
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{JWT_USER_VALIDATION}"
          replace: ${{ secrets.JWT_USER_VALIDATION }}
          regex: false
      - name: Find and Replace URL Verification Endpoint
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{URL_VERIFICATION_ENDPOINT}"
          replace: ${{ secrets.URL_VERIFICATION_ENDPOINT }}
          regex: false
      - name: Find and Replace Storage Type
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{STORAGE_TYPE}"
          replace: ${{ secrets.STORAGE_TYPE }}
          regex: false
      - name: Find and Replace Storage Path
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "{STORAGE_PATH}"
          replace: ${{ secrets.STORAGE_PATH }}
          regex: false
      - name: Print environment production file
        run: |
          cat src/.env.production
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox and any other packages
        run: pip install tox
      - name: Install dotenv
        run: pip install python-dotenv
      - name: check settings
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import os
            import dotenv
            from pathlib import Path
            file = '.env'
            BASE_DIR = os.getcwd()
            print('BASE_DIR: ', BASE_DIR)
            dotenv_file = os.path.join(BASE_DIR, file)
            print('DOT_ENV_FILE: ', dotenv_file)
            if os.path.isfile('src/.env.production'):
                print('Is File')
                dotenv.load_dotenv('src/.env.production')
            print('SERVER_MODE: ', os.environ.get('DJANGO_SERVER_MODE'))
            if os.environ.get('DJANGO_SERVER_MODE') == 'production':
                file = '.env.production'
#      - name: Run tox
#        run: tox -e py
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
